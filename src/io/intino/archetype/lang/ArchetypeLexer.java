// Generated from /Users/oroncal/workspace/archetype/src/io/intino/archetype/lang/ArchetypeLexer.g4 by ANTLR 4.10.1
package io.intino.archetype.lang;


import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.ATN;
import org.antlr.v4.runtime.atn.ATNDeserializer;
import org.antlr.v4.runtime.atn.LexerATNSimulator;
import org.antlr.v4.runtime.atn.PredictionContextCache;
import org.antlr.v4.runtime.dfa.DFA;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class ArchetypeLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.10.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		IN=1, WITH=2, SPLITTED=3, TARGET=4, LEFT_PARENTHESIS=5, RIGHT_PARENTHESIS=6, 
		LEFT_SQUARE=7, RIGHT_SQUARE=8, LEFT_BRACKET=9, RIGHT_BRACKET=10, COMMA=11, 
		MINUS=12, PLUS=13, STAR=14, AS=15, REGEX=16, OWNER=17, CONSUMER=18, TIMETAG=19, 
		COLON=20, LINE_COMMENT=21, LABEL=22, IDENTIFIER=23, NEWLINE=24, SPACES=25, 
		SP=26, NL=27, NEW_LINE_INDENT=28, DEDENT=29, UNKNOWN_TOKEN=30, QUOTE_BEGIN=31, 
		QUOTE_END=32, EXPRESSION_BEGIN=33, EXPRESSION_END=34;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"IN", "WITH", "SPLITTED", "TARGET", "LEFT_PARENTHESIS", "RIGHT_PARENTHESIS", 
			"LEFT_SQUARE", "RIGHT_SQUARE", "LEFT_BRACKET", "RIGHT_BRACKET", "COMMA", 
			"MINUS", "PLUS", "STAR", "AS", "REGEX", "OWNER", "CONSUMER", "TIMETAG", 
			"COLON", "LINE_COMMENT", "LABEL", "IDENTIFIER", "NEWLINE", "SPACES", 
			"SP", "NL", "NEW_LINE_INDENT", "DEDENT", "UNKNOWN_TOKEN", "QUOTE_BEGIN", 
			"QUOTE_END", "EXPRESSION_BEGIN", "EXPRESSION_END", "DOLLAR", "EURO", 
			"PERCENTAGE", "GRADE", "BY", "DIVIDED_BY", "DASH", "UNDERDASH", "DOT", 
			"DIGIT", "LETTER"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "'in'", "'with'", "'splitted'", "'TARGETS'", "'('", "')'", "'['", 
			"']'", "'{'", "'}'", "','", "'-'", "'+'", "'*'", "'as'", "'regex'", "'owner'", 
			"'consumer'", "'timetag'", "':'", null, null, null, null, null, null, 
			null, "'indent'", "'dedent'", null, "'%QUOTE_BEGIN%'", "'%QUOTE_END%'", 
			"'%EXPRESSION_BEGIN%'", "'%EXPRESSION_END%'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, "IN", "WITH", "SPLITTED", "TARGET", "LEFT_PARENTHESIS", "RIGHT_PARENTHESIS", 
			"LEFT_SQUARE", "RIGHT_SQUARE", "LEFT_BRACKET", "RIGHT_BRACKET", "COMMA", 
			"MINUS", "PLUS", "STAR", "AS", "REGEX", "OWNER", "CONSUMER", "TIMETAG", 
			"COLON", "LINE_COMMENT", "LABEL", "IDENTIFIER", "NEWLINE", "SPACES", 
			"SP", "NL", "NEW_LINE_INDENT", "DEDENT", "UNKNOWN_TOKEN", "QUOTE_BEGIN", 
			"QUOTE_END", "EXPRESSION_BEGIN", "EXPRESSION_END"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	    BlockManager blockManager = new BlockManager();
	    private static java.util.Queue<Token> queue = new java.util.LinkedList<>();

	    @Override
	    public void reset() {
	        super.reset();
	        queue.clear();
	        blockManager.reset();
	    }

	    @Override
	    public void emit(Token token) {
	        if (token.getType() == EOF) eof();
	        queue.offer(token);
	        setToken(token);
	    }

	    @Override
	    public Token nextToken() {
	        super.nextToken();
	        return queue.isEmpty()? emitEOF() : queue.poll();
	    }

	    private void emitToken(int ttype) {
	        setType(ttype);
	        emit();
	    }

	    private boolean isWhiteLineOrEOF() {
	        int character = _input.LA(1);
	        return (character == -1 || (char) character == '\n');
	    }

	    private void newlinesAndSpaces() {
	        if (!isWhiteLineOrEOF()) {
	            blockManager.newlineAndSpaces(getTextSpaces(getText()));
	            sendTokens();
	        }
	        else skip();
	    }

	    private String getTextSpaces(String text) {
	        int index = (text.indexOf(' ') == -1)? text.indexOf('\t') : text.indexOf(' ');
	        return (index == -1)? "" : text.substring(index);
	    }

	    private void inline() {
	        blockManager.openBracket(getText().length());
	        sendTokens();
	    }

	    private void semicolon() {
	        blockManager.semicolon(getText().length());
	        sendTokens();
	    }

	    private void eof() {
	        blockManager.eof();
	        sendTokens();
	    }

	    private void sendTokens() {
	        blockManager.actions();
	        for (BlockManager.Token token : blockManager.actions())
	            emitToken(translate(token));
	    }

	    private int translate (BlockManager.Token token) {
	        if (token.toString().equals("NEWLINE")) return NEWLINE;
	        if (token.toString().equals("DEDENT")) return DEDENT;
	        if (token.toString().equals("NEWLINE_INDENT")) return NEW_LINE_INDENT;
	        return UNKNOWN_TOKEN;
	    }


	public ArchetypeLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "ArchetypeLexer.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	@Override
	public void action(RuleContext _localctx, int ruleIndex, int actionIndex) {
		switch (ruleIndex) {
		case 23:
			NEWLINE_action((RuleContext)_localctx, actionIndex);
			break;
		}
	}
	private void NEWLINE_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 0:
			 newlinesAndSpaces(); 
			break;
		}
	}

	public static final String _serializedATN =
		"\u0004\u0000\"\u015c\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002\u0001"+
		"\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002\u0004"+
		"\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002\u0007"+
		"\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002\u000b"+
		"\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e\u0002"+
		"\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002\u0011\u0007\u0011\u0002"+
		"\u0012\u0007\u0012\u0002\u0013\u0007\u0013\u0002\u0014\u0007\u0014\u0002"+
		"\u0015\u0007\u0015\u0002\u0016\u0007\u0016\u0002\u0017\u0007\u0017\u0002"+
		"\u0018\u0007\u0018\u0002\u0019\u0007\u0019\u0002\u001a\u0007\u001a\u0002"+
		"\u001b\u0007\u001b\u0002\u001c\u0007\u001c\u0002\u001d\u0007\u001d\u0002"+
		"\u001e\u0007\u001e\u0002\u001f\u0007\u001f\u0002 \u0007 \u0002!\u0007"+
		"!\u0002\"\u0007\"\u0002#\u0007#\u0002$\u0007$\u0002%\u0007%\u0002&\u0007"+
		"&\u0002\'\u0007\'\u0002(\u0007(\u0002)\u0007)\u0002*\u0007*\u0002+\u0007"+
		"+\u0002,\u0007,\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0001\u0001"+
		"\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0002\u0001\u0002\u0001"+
		"\u0002\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0002\u0001"+
		"\u0002\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0003\u0001"+
		"\u0003\u0001\u0003\u0001\u0003\u0001\u0004\u0001\u0004\u0001\u0005\u0001"+
		"\u0005\u0001\u0006\u0001\u0006\u0001\u0007\u0001\u0007\u0001\b\u0001\b"+
		"\u0001\t\u0001\t\u0001\n\u0001\n\u0001\u000b\u0001\u000b\u0001\f\u0001"+
		"\f\u0001\r\u0001\r\u0001\u000e\u0001\u000e\u0001\u000e\u0001\u000f\u0001"+
		"\u000f\u0001\u000f\u0001\u000f\u0001\u000f\u0001\u000f\u0001\u0010\u0001"+
		"\u0010\u0001\u0010\u0001\u0010\u0001\u0010\u0001\u0010\u0001\u0011\u0001"+
		"\u0011\u0001\u0011\u0001\u0011\u0001\u0011\u0001\u0011\u0001\u0011\u0001"+
		"\u0011\u0001\u0011\u0001\u0012\u0001\u0012\u0001\u0012\u0001\u0012\u0001"+
		"\u0012\u0001\u0012\u0001\u0012\u0001\u0012\u0001\u0013\u0001\u0013\u0001"+
		"\u0014\u0005\u0014\u00ac\b\u0014\n\u0014\f\u0014\u00af\t\u0014\u0001\u0014"+
		"\u0005\u0014\u00b2\b\u0014\n\u0014\f\u0014\u00b5\t\u0014\u0001\u0014\u0001"+
		"\u0014\u0005\u0014\u00b9\b\u0014\n\u0014\f\u0014\u00bc\t\u0014\u0001\u0014"+
		"\u0001\u0014\u0001\u0015\u0001\u0015\u0001\u0015\u0001\u0015\u0005\u0015"+
		"\u00c4\b\u0015\n\u0015\f\u0015\u00c7\t\u0015\u0001\u0015\u0001\u0015\u0001"+
		"\u0016\u0001\u0016\u0003\u0016\u00cd\b\u0016\u0001\u0016\u0001\u0016\u0001"+
		"\u0016\u0001\u0016\u0001\u0016\u0005\u0016\u00d4\b\u0016\n\u0016\f\u0016"+
		"\u00d7\t\u0016\u0001\u0017\u0004\u0017\u00da\b\u0017\u000b\u0017\f\u0017"+
		"\u00db\u0001\u0017\u0005\u0017\u00df\b\u0017\n\u0017\f\u0017\u00e2\t\u0017"+
		"\u0001\u0017\u0001\u0017\u0001\u0018\u0004\u0018\u00e7\b\u0018\u000b\u0018"+
		"\f\u0018\u00e8\u0001\u0018\u0003\u0018\u00ec\b\u0018\u0001\u0018\u0001"+
		"\u0018\u0001\u0019\u0001\u0019\u0001\u001a\u0003\u001a\u00f3\b\u001a\u0001"+
		"\u001a\u0001\u001a\u0003\u001a\u00f7\b\u001a\u0001\u001b\u0001\u001b\u0001"+
		"\u001b\u0001\u001b\u0001\u001b\u0001\u001b\u0001\u001b\u0001\u001c\u0001"+
		"\u001c\u0001\u001c\u0001\u001c\u0001\u001c\u0001\u001c\u0001\u001c\u0001"+
		"\u001d\u0001\u001d\u0001\u001e\u0001\u001e\u0001\u001e\u0001\u001e\u0001"+
		"\u001e\u0001\u001e\u0001\u001e\u0001\u001e\u0001\u001e\u0001\u001e\u0001"+
		"\u001e\u0001\u001e\u0001\u001e\u0001\u001e\u0001\u001f\u0001\u001f\u0001"+
		"\u001f\u0001\u001f\u0001\u001f\u0001\u001f\u0001\u001f\u0001\u001f\u0001"+
		"\u001f\u0001\u001f\u0001\u001f\u0001\u001f\u0001 \u0001 \u0001 \u0001"+
		" \u0001 \u0001 \u0001 \u0001 \u0001 \u0001 \u0001 \u0001 \u0001 \u0001"+
		" \u0001 \u0001 \u0001 \u0001 \u0001 \u0001!\u0001!\u0001!\u0001!\u0001"+
		"!\u0001!\u0001!\u0001!\u0001!\u0001!\u0001!\u0001!\u0001!\u0001!\u0001"+
		"!\u0001!\u0001!\u0001\"\u0001\"\u0001#\u0001#\u0001$\u0001$\u0001%\u0001"+
		"%\u0001&\u0001&\u0001\'\u0001\'\u0001(\u0001(\u0001)\u0001)\u0001*\u0001"+
		"*\u0001+\u0001+\u0001,\u0001,\u0000\u0000-\u0001\u0001\u0003\u0002\u0005"+
		"\u0003\u0007\u0004\t\u0005\u000b\u0006\r\u0007\u000f\b\u0011\t\u0013\n"+
		"\u0015\u000b\u0017\f\u0019\r\u001b\u000e\u001d\u000f\u001f\u0010!\u0011"+
		"#\u0012%\u0013\'\u0014)\u0015+\u0016-\u0017/\u00181\u00193\u001a5\u001b"+
		"7\u001c9\u001d;\u001e=\u001f? A!C\"E\u0000G\u0000I\u0000K\u0000M\u0000"+
		"O\u0000Q\u0000S\u0000U\u0000W\u0000Y\u0000\u0001\u0000\u0006\u0002\u0000"+
		"\n\n\r\r\u0002\u0000\t\t  \u0002\u0000\"\"\\\\\u0002\u0000\u00b0\u00b0"+
		"\u00ba\u00ba\u0001\u000009\u000e\u0000AZaz\u00c1\u00c1\u00c9\u00c9\u00cd"+
		"\u00cd\u00d1\u00d1\u00d3\u00d3\u00da\u00da\u00e1\u00e1\u00e9\u00e9\u00ed"+
		"\u00ed\u00f1\u00f1\u00f3\u00f3\u00fa\u00fa\u0161\u0000\u0001\u0001\u0000"+
		"\u0000\u0000\u0000\u0003\u0001\u0000\u0000\u0000\u0000\u0005\u0001\u0000"+
		"\u0000\u0000\u0000\u0007\u0001\u0000\u0000\u0000\u0000\t\u0001\u0000\u0000"+
		"\u0000\u0000\u000b\u0001\u0000\u0000\u0000\u0000\r\u0001\u0000\u0000\u0000"+
		"\u0000\u000f\u0001\u0000\u0000\u0000\u0000\u0011\u0001\u0000\u0000\u0000"+
		"\u0000\u0013\u0001\u0000\u0000\u0000\u0000\u0015\u0001\u0000\u0000\u0000"+
		"\u0000\u0017\u0001\u0000\u0000\u0000\u0000\u0019\u0001\u0000\u0000\u0000"+
		"\u0000\u001b\u0001\u0000\u0000\u0000\u0000\u001d\u0001\u0000\u0000\u0000"+
		"\u0000\u001f\u0001\u0000\u0000\u0000\u0000!\u0001\u0000\u0000\u0000\u0000"+
		"#\u0001\u0000\u0000\u0000\u0000%\u0001\u0000\u0000\u0000\u0000\'\u0001"+
		"\u0000\u0000\u0000\u0000)\u0001\u0000\u0000\u0000\u0000+\u0001\u0000\u0000"+
		"\u0000\u0000-\u0001\u0000\u0000\u0000\u0000/\u0001\u0000\u0000\u0000\u0000"+
		"1\u0001\u0000\u0000\u0000\u00003\u0001\u0000\u0000\u0000\u00005\u0001"+
		"\u0000\u0000\u0000\u00007\u0001\u0000\u0000\u0000\u00009\u0001\u0000\u0000"+
		"\u0000\u0000;\u0001\u0000\u0000\u0000\u0000=\u0001\u0000\u0000\u0000\u0000"+
		"?\u0001\u0000\u0000\u0000\u0000A\u0001\u0000\u0000\u0000\u0000C\u0001"+
		"\u0000\u0000\u0000\u0001[\u0001\u0000\u0000\u0000\u0003^\u0001\u0000\u0000"+
		"\u0000\u0005c\u0001\u0000\u0000\u0000\u0007l\u0001\u0000\u0000\u0000\t"+
		"t\u0001\u0000\u0000\u0000\u000bv\u0001\u0000\u0000\u0000\rx\u0001\u0000"+
		"\u0000\u0000\u000fz\u0001\u0000\u0000\u0000\u0011|\u0001\u0000\u0000\u0000"+
		"\u0013~\u0001\u0000\u0000\u0000\u0015\u0080\u0001\u0000\u0000\u0000\u0017"+
		"\u0082\u0001\u0000\u0000\u0000\u0019\u0084\u0001\u0000\u0000\u0000\u001b"+
		"\u0086\u0001\u0000\u0000\u0000\u001d\u0088\u0001\u0000\u0000\u0000\u001f"+
		"\u008b\u0001\u0000\u0000\u0000!\u0091\u0001\u0000\u0000\u0000#\u0097\u0001"+
		"\u0000\u0000\u0000%\u00a0\u0001\u0000\u0000\u0000\'\u00a8\u0001\u0000"+
		"\u0000\u0000)\u00ad\u0001\u0000\u0000\u0000+\u00bf\u0001\u0000\u0000\u0000"+
		"-\u00cc\u0001\u0000\u0000\u0000/\u00d9\u0001\u0000\u0000\u00001\u00e6"+
		"\u0001\u0000\u0000\u00003\u00ef\u0001\u0000\u0000\u00005\u00f6\u0001\u0000"+
		"\u0000\u00007\u00f8\u0001\u0000\u0000\u00009\u00ff\u0001\u0000\u0000\u0000"+
		";\u0106\u0001\u0000\u0000\u0000=\u0108\u0001\u0000\u0000\u0000?\u0116"+
		"\u0001\u0000\u0000\u0000A\u0122\u0001\u0000\u0000\u0000C\u0135\u0001\u0000"+
		"\u0000\u0000E\u0146\u0001\u0000\u0000\u0000G\u0148\u0001\u0000\u0000\u0000"+
		"I\u014a\u0001\u0000\u0000\u0000K\u014c\u0001\u0000\u0000\u0000M\u014e"+
		"\u0001\u0000\u0000\u0000O\u0150\u0001\u0000\u0000\u0000Q\u0152\u0001\u0000"+
		"\u0000\u0000S\u0154\u0001\u0000\u0000\u0000U\u0156\u0001\u0000\u0000\u0000"+
		"W\u0158\u0001\u0000\u0000\u0000Y\u015a\u0001\u0000\u0000\u0000[\\\u0005"+
		"i\u0000\u0000\\]\u0005n\u0000\u0000]\u0002\u0001\u0000\u0000\u0000^_\u0005"+
		"w\u0000\u0000_`\u0005i\u0000\u0000`a\u0005t\u0000\u0000ab\u0005h\u0000"+
		"\u0000b\u0004\u0001\u0000\u0000\u0000cd\u0005s\u0000\u0000de\u0005p\u0000"+
		"\u0000ef\u0005l\u0000\u0000fg\u0005i\u0000\u0000gh\u0005t\u0000\u0000"+
		"hi\u0005t\u0000\u0000ij\u0005e\u0000\u0000jk\u0005d\u0000\u0000k\u0006"+
		"\u0001\u0000\u0000\u0000lm\u0005T\u0000\u0000mn\u0005A\u0000\u0000no\u0005"+
		"R\u0000\u0000op\u0005G\u0000\u0000pq\u0005E\u0000\u0000qr\u0005T\u0000"+
		"\u0000rs\u0005S\u0000\u0000s\b\u0001\u0000\u0000\u0000tu\u0005(\u0000"+
		"\u0000u\n\u0001\u0000\u0000\u0000vw\u0005)\u0000\u0000w\f\u0001\u0000"+
		"\u0000\u0000xy\u0005[\u0000\u0000y\u000e\u0001\u0000\u0000\u0000z{\u0005"+
		"]\u0000\u0000{\u0010\u0001\u0000\u0000\u0000|}\u0005{\u0000\u0000}\u0012"+
		"\u0001\u0000\u0000\u0000~\u007f\u0005}\u0000\u0000\u007f\u0014\u0001\u0000"+
		"\u0000\u0000\u0080\u0081\u0005,\u0000\u0000\u0081\u0016\u0001\u0000\u0000"+
		"\u0000\u0082\u0083\u0005-\u0000\u0000\u0083\u0018\u0001\u0000\u0000\u0000"+
		"\u0084\u0085\u0005+\u0000\u0000\u0085\u001a\u0001\u0000\u0000\u0000\u0086"+
		"\u0087\u0005*\u0000\u0000\u0087\u001c\u0001\u0000\u0000\u0000\u0088\u0089"+
		"\u0005a\u0000\u0000\u0089\u008a\u0005s\u0000\u0000\u008a\u001e\u0001\u0000"+
		"\u0000\u0000\u008b\u008c\u0005r\u0000\u0000\u008c\u008d\u0005e\u0000\u0000"+
		"\u008d\u008e\u0005g\u0000\u0000\u008e\u008f\u0005e\u0000\u0000\u008f\u0090"+
		"\u0005x\u0000\u0000\u0090 \u0001\u0000\u0000\u0000\u0091\u0092\u0005o"+
		"\u0000\u0000\u0092\u0093\u0005w\u0000\u0000\u0093\u0094\u0005n\u0000\u0000"+
		"\u0094\u0095\u0005e\u0000\u0000\u0095\u0096\u0005r\u0000\u0000\u0096\""+
		"\u0001\u0000\u0000\u0000\u0097\u0098\u0005c\u0000\u0000\u0098\u0099\u0005"+
		"o\u0000\u0000\u0099\u009a\u0005n\u0000\u0000\u009a\u009b\u0005s\u0000"+
		"\u0000\u009b\u009c\u0005u\u0000\u0000\u009c\u009d\u0005m\u0000\u0000\u009d"+
		"\u009e\u0005e\u0000\u0000\u009e\u009f\u0005r\u0000\u0000\u009f$\u0001"+
		"\u0000\u0000\u0000\u00a0\u00a1\u0005t\u0000\u0000\u00a1\u00a2\u0005i\u0000"+
		"\u0000\u00a2\u00a3\u0005m\u0000\u0000\u00a3\u00a4\u0005e\u0000\u0000\u00a4"+
		"\u00a5\u0005t\u0000\u0000\u00a5\u00a6\u0005a\u0000\u0000\u00a6\u00a7\u0005"+
		"g\u0000\u0000\u00a7&\u0001\u0000\u0000\u0000\u00a8\u00a9\u0005:\u0000"+
		"\u0000\u00a9(\u0001\u0000\u0000\u0000\u00aa\u00ac\u0007\u0000\u0000\u0000"+
		"\u00ab\u00aa\u0001\u0000\u0000\u0000\u00ac\u00af\u0001\u0000\u0000\u0000"+
		"\u00ad\u00ab\u0001\u0000\u0000\u0000\u00ad\u00ae\u0001\u0000\u0000\u0000"+
		"\u00ae\u00b3\u0001\u0000\u0000\u0000\u00af\u00ad\u0001\u0000\u0000\u0000"+
		"\u00b0\u00b2\u0007\u0001\u0000\u0000\u00b1\u00b0\u0001\u0000\u0000\u0000"+
		"\u00b2\u00b5\u0001\u0000\u0000\u0000\u00b3\u00b1\u0001\u0000\u0000\u0000"+
		"\u00b3\u00b4\u0001\u0000\u0000\u0000\u00b4\u00b6\u0001\u0000\u0000\u0000"+
		"\u00b5\u00b3\u0001\u0000\u0000\u0000\u00b6\u00ba\u0005#\u0000\u0000\u00b7"+
		"\u00b9\b\u0000\u0000\u0000\u00b8\u00b7\u0001\u0000\u0000\u0000\u00b9\u00bc"+
		"\u0001\u0000\u0000\u0000\u00ba\u00b8\u0001\u0000\u0000\u0000\u00ba\u00bb"+
		"\u0001\u0000\u0000\u0000\u00bb\u00bd\u0001\u0000\u0000\u0000\u00bc\u00ba"+
		"\u0001\u0000\u0000\u0000\u00bd\u00be\u0006\u0014\u0000\u0000\u00be*\u0001"+
		"\u0000\u0000\u0000\u00bf\u00c5\u0005\"\u0000\u0000\u00c0\u00c4\b\u0002"+
		"\u0000\u0000\u00c1\u00c2\u0005\\\u0000\u0000\u00c2\u00c4\u0007\u0002\u0000"+
		"\u0000\u00c3\u00c0\u0001\u0000\u0000\u0000\u00c3\u00c1\u0001\u0000\u0000"+
		"\u0000\u00c4\u00c7\u0001\u0000\u0000\u0000\u00c5\u00c3\u0001\u0000\u0000"+
		"\u0000\u00c5\u00c6\u0001\u0000\u0000\u0000\u00c6\u00c8\u0001\u0000\u0000"+
		"\u0000\u00c7\u00c5\u0001\u0000\u0000\u0000\u00c8\u00c9\u0005\"\u0000\u0000"+
		"\u00c9,\u0001\u0000\u0000\u0000\u00ca\u00cd\u0003Y,\u0000\u00cb\u00cd"+
		"\u0003S)\u0000\u00cc\u00ca\u0001\u0000\u0000\u0000\u00cc\u00cb\u0001\u0000"+
		"\u0000\u0000\u00cd\u00d5\u0001\u0000\u0000\u0000\u00ce\u00d4\u0003W+\u0000"+
		"\u00cf\u00d4\u0003Y,\u0000\u00d0\u00d4\u0003Q(\u0000\u00d1\u00d4\u0003"+
		"S)\u0000\u00d2\u00d4\u0003U*\u0000\u00d3\u00ce\u0001\u0000\u0000\u0000"+
		"\u00d3\u00cf\u0001\u0000\u0000\u0000\u00d3\u00d0\u0001\u0000\u0000\u0000"+
		"\u00d3\u00d1\u0001\u0000\u0000\u0000\u00d3\u00d2\u0001\u0000\u0000\u0000"+
		"\u00d4\u00d7\u0001\u0000\u0000\u0000\u00d5\u00d3\u0001\u0000\u0000\u0000"+
		"\u00d5\u00d6\u0001\u0000\u0000\u0000\u00d6.\u0001\u0000\u0000\u0000\u00d7"+
		"\u00d5\u0001\u0000\u0000\u0000\u00d8\u00da\u00035\u001a\u0000\u00d9\u00d8"+
		"\u0001\u0000\u0000\u0000\u00da\u00db\u0001\u0000\u0000\u0000\u00db\u00d9"+
		"\u0001\u0000\u0000\u0000\u00db\u00dc\u0001\u0000\u0000\u0000\u00dc\u00e0"+
		"\u0001\u0000\u0000\u0000\u00dd\u00df\u00033\u0019\u0000\u00de\u00dd\u0001"+
		"\u0000\u0000\u0000\u00df\u00e2\u0001\u0000\u0000\u0000\u00e0\u00de\u0001"+
		"\u0000\u0000\u0000\u00e0\u00e1\u0001\u0000\u0000\u0000\u00e1\u00e3\u0001"+
		"\u0000\u0000\u0000\u00e2\u00e0\u0001\u0000\u0000\u0000\u00e3\u00e4\u0006"+
		"\u0017\u0001\u0000\u00e40\u0001\u0000\u0000\u0000\u00e5\u00e7\u00033\u0019"+
		"\u0000\u00e6\u00e5\u0001\u0000\u0000\u0000\u00e7\u00e8\u0001\u0000\u0000"+
		"\u0000\u00e8\u00e6\u0001\u0000\u0000\u0000\u00e8\u00e9\u0001\u0000\u0000"+
		"\u0000\u00e9\u00eb\u0001\u0000\u0000\u0000\u00ea\u00ec\u0005\u0000\u0000"+
		"\u0001\u00eb\u00ea\u0001\u0000\u0000\u0000\u00eb\u00ec\u0001\u0000\u0000"+
		"\u0000\u00ec\u00ed\u0001\u0000\u0000\u0000\u00ed\u00ee\u0006\u0018\u0002"+
		"\u0000\u00ee2\u0001\u0000\u0000\u0000\u00ef\u00f0\u0007\u0001\u0000\u0000"+
		"\u00f04\u0001\u0000\u0000\u0000\u00f1\u00f3\u0005\r\u0000\u0000\u00f2"+
		"\u00f1\u0001\u0000\u0000\u0000\u00f2\u00f3\u0001\u0000\u0000\u0000\u00f3"+
		"\u00f4\u0001\u0000\u0000\u0000\u00f4\u00f7\u0005\n\u0000\u0000\u00f5\u00f7"+
		"\u0005\r\u0000\u0000\u00f6\u00f2\u0001\u0000\u0000\u0000\u00f6\u00f5\u0001"+
		"\u0000\u0000\u0000\u00f76\u0001\u0000\u0000\u0000\u00f8\u00f9\u0005i\u0000"+
		"\u0000\u00f9\u00fa\u0005n\u0000\u0000\u00fa\u00fb\u0005d\u0000\u0000\u00fb"+
		"\u00fc\u0005e\u0000\u0000\u00fc\u00fd\u0005n\u0000\u0000\u00fd\u00fe\u0005"+
		"t\u0000\u0000\u00fe8\u0001\u0000\u0000\u0000\u00ff\u0100\u0005d\u0000"+
		"\u0000\u0100\u0101\u0005e\u0000\u0000\u0101\u0102\u0005d\u0000\u0000\u0102"+
		"\u0103\u0005e\u0000\u0000\u0103\u0104\u0005n\u0000\u0000\u0104\u0105\u0005"+
		"t\u0000\u0000\u0105:\u0001\u0000\u0000\u0000\u0106\u0107\t\u0000\u0000"+
		"\u0000\u0107<\u0001\u0000\u0000\u0000\u0108\u0109\u0005%\u0000\u0000\u0109"+
		"\u010a\u0005Q\u0000\u0000\u010a\u010b\u0005U\u0000\u0000\u010b\u010c\u0005"+
		"O\u0000\u0000\u010c\u010d\u0005T\u0000\u0000\u010d\u010e\u0005E\u0000"+
		"\u0000\u010e\u010f\u0005_\u0000\u0000\u010f\u0110\u0005B\u0000\u0000\u0110"+
		"\u0111\u0005E\u0000\u0000\u0111\u0112\u0005G\u0000\u0000\u0112\u0113\u0005"+
		"I\u0000\u0000\u0113\u0114\u0005N\u0000\u0000\u0114\u0115\u0005%\u0000"+
		"\u0000\u0115>\u0001\u0000\u0000\u0000\u0116\u0117\u0005%\u0000\u0000\u0117"+
		"\u0118\u0005Q\u0000\u0000\u0118\u0119\u0005U\u0000\u0000\u0119\u011a\u0005"+
		"O\u0000\u0000\u011a\u011b\u0005T\u0000\u0000\u011b\u011c\u0005E\u0000"+
		"\u0000\u011c\u011d\u0005_\u0000\u0000\u011d\u011e\u0005E\u0000\u0000\u011e"+
		"\u011f\u0005N\u0000\u0000\u011f\u0120\u0005D\u0000\u0000\u0120\u0121\u0005"+
		"%\u0000\u0000\u0121@\u0001\u0000\u0000\u0000\u0122\u0123\u0005%\u0000"+
		"\u0000\u0123\u0124\u0005E\u0000\u0000\u0124\u0125\u0005X\u0000\u0000\u0125"+
		"\u0126\u0005P\u0000\u0000\u0126\u0127\u0005R\u0000\u0000\u0127\u0128\u0005"+
		"E\u0000\u0000\u0128\u0129\u0005S\u0000\u0000\u0129\u012a\u0005S\u0000"+
		"\u0000\u012a\u012b\u0005I\u0000\u0000\u012b\u012c\u0005O\u0000\u0000\u012c"+
		"\u012d\u0005N\u0000\u0000\u012d\u012e\u0005_\u0000\u0000\u012e\u012f\u0005"+
		"B\u0000\u0000\u012f\u0130\u0005E\u0000\u0000\u0130\u0131\u0005G\u0000"+
		"\u0000\u0131\u0132\u0005I\u0000\u0000\u0132\u0133\u0005N\u0000\u0000\u0133"+
		"\u0134\u0005%\u0000\u0000\u0134B\u0001\u0000\u0000\u0000\u0135\u0136\u0005"+
		"%\u0000\u0000\u0136\u0137\u0005E\u0000\u0000\u0137\u0138\u0005X\u0000"+
		"\u0000\u0138\u0139\u0005P\u0000\u0000\u0139\u013a\u0005R\u0000\u0000\u013a"+
		"\u013b\u0005E\u0000\u0000\u013b\u013c\u0005S\u0000\u0000\u013c\u013d\u0005"+
		"S\u0000\u0000\u013d\u013e\u0005I\u0000\u0000\u013e\u013f\u0005O\u0000"+
		"\u0000\u013f\u0140\u0005N\u0000\u0000\u0140\u0141\u0005_\u0000\u0000\u0141"+
		"\u0142\u0005E\u0000\u0000\u0142\u0143\u0005N\u0000\u0000\u0143\u0144\u0005"+
		"D\u0000\u0000\u0144\u0145\u0005%\u0000\u0000\u0145D\u0001\u0000\u0000"+
		"\u0000\u0146\u0147\u0005$\u0000\u0000\u0147F\u0001\u0000\u0000\u0000\u0148"+
		"\u0149\u0005\u20ac\u0000\u0000\u0149H\u0001\u0000\u0000\u0000\u014a\u014b"+
		"\u0005%\u0000\u0000\u014bJ\u0001\u0000\u0000\u0000\u014c\u014d\u0007\u0003"+
		"\u0000\u0000\u014dL\u0001\u0000\u0000\u0000\u014e\u014f\u0005\u00b7\u0000"+
		"\u0000\u014fN\u0001\u0000\u0000\u0000\u0150\u0151\u0005/\u0000\u0000\u0151"+
		"P\u0001\u0000\u0000\u0000\u0152\u0153\u0005-\u0000\u0000\u0153R\u0001"+
		"\u0000\u0000\u0000\u0154\u0155\u0005_\u0000\u0000\u0155T\u0001\u0000\u0000"+
		"\u0000\u0156\u0157\u0005.\u0000\u0000\u0157V\u0001\u0000\u0000\u0000\u0158"+
		"\u0159\u0007\u0004\u0000\u0000\u0159X\u0001\u0000\u0000\u0000\u015a\u015b"+
		"\u0007\u0005\u0000\u0000\u015bZ\u0001\u0000\u0000\u0000\u0010\u0000\u00ad"+
		"\u00b1\u00b3\u00ba\u00c3\u00c5\u00cc\u00d3\u00d5\u00db\u00e0\u00e8\u00eb"+
		"\u00f2\u00f6\u0003\u0006\u0000\u0000\u0001\u0017\u0000\u0000\u0001\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}